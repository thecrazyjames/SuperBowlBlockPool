[{"/Users/James/Desktop/reacttemplate/src/index.js":"1","/Users/James/Desktop/reacttemplate/src/App.js":"2","/Users/James/Desktop/reacttemplate/src/components/Main.js":"3","/Users/James/Desktop/reacttemplate/src/components/Header.js":"4","/Users/James/Desktop/reacttemplate/src/components/Footer.js":"5","/Users/James/Desktop/blockpool/src/index.js":"6","/Users/James/Desktop/blockpool/src/App.js":"7","/Users/James/Desktop/blockpool/src/components/Header.js":"8","/Users/James/Desktop/blockpool/src/components/Footer.js":"9","/Users/James/Desktop/blockpool/src/components/Main/Main.js":"10","/Users/James/Desktop/blockpool/src/components/blockpool/Blockpool.js":"11","/Users/James/Desktop/blockpool/src/components/blockcard/Blockcard.js":"12","/Users/James/Desktop/blockpool/src/utils/blockdata100.js":"13"},{"size":176,"mtime":1645561121616,"results":"14","hashOfConfig":"15"},{"size":263,"mtime":1645561482631,"results":"16","hashOfConfig":"15"},{"size":164,"mtime":1645561478155,"results":"17","hashOfConfig":"15"},{"size":167,"mtime":1645561475535,"results":"18","hashOfConfig":"15"},{"size":159,"mtime":1645561479899,"results":"19","hashOfConfig":"15"},{"size":176,"mtime":1645561121616,"results":"20","hashOfConfig":"21"},{"size":307,"mtime":1647195896264,"results":"22","hashOfConfig":"21"},{"size":1218,"mtime":1647028695648,"results":"23","hashOfConfig":"21"},{"size":140,"mtime":1647028475744,"results":"24","hashOfConfig":"21"},{"size":443,"mtime":1647195907967,"results":"25","hashOfConfig":"21"},{"size":1225,"mtime":1647285789425,"results":"26","hashOfConfig":"21"},{"size":2387,"mtime":1647285789443,"results":"27","hashOfConfig":"21"},{"size":18094,"mtime":1647263475945,"results":"28","hashOfConfig":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"bf1ix2",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"tcxqik",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/James/Desktop/reacttemplate/src/index.js",[],[],["73","74"],"/Users/James/Desktop/reacttemplate/src/App.js",[],[],"/Users/James/Desktop/reacttemplate/src/components/Main.js",[],[],"/Users/James/Desktop/reacttemplate/src/components/Header.js",[],[],"/Users/James/Desktop/reacttemplate/src/components/Footer.js",[],[],"/Users/James/Desktop/blockpool/src/index.js",[],[],["75","76"],"/Users/James/Desktop/blockpool/src/App.js",["77"],[],"import Main from './components/Main/Main'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Grid } from '@mui/material';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n",["78","79"],"/Users/James/Desktop/blockpool/src/components/Header.js",[],[],"/Users/James/Desktop/blockpool/src/components/Footer.js",[],[],"/Users/James/Desktop/blockpool/src/components/Main/Main.js",[],[],"/Users/James/Desktop/blockpool/src/components/blockpool/Blockpool.js",["80"],[],"/Users/James/Desktop/blockpool/src/components/blockcard/Blockcard.js",["81","82"],[],"import React from 'react'\n\nimport Card from '@mui/material/Card';\n// import CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea, TextField } from '@mui/material';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport blockdata100 from '../../utils/blockdata100.js'\n\nconst Blockcard = ({id, status, firstName, lastName, email}) => {\n  \n  const [open, setOpen] = React.useState(false);\n  const [getEmail, setGetEmail] = React.useState('');\n  const [blockPoolData, setBlockPoolData] = React.useState(blockdata100)\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTextUpdate = (e) => {\n    setGetEmail(e.target.value)\n    console.log(getEmail)\n  }\n\n  const claimBlock = () => {\n    \n    blockdata100.blocks[id-1].email=getEmail\n\n    handleClose()\n  }\n  \n  return (\n    <div className=\"Blockcard\">\n\n    <Card>\n      <CardActionArea onClick={handleClickOpen}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          { status === \"Open\" ? status + id: email }\n        </Typography>\n      </CardContent>\n      </CardActionArea>\n    </Card>\n\n    <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To claim BLOCK {id} before anyone else, please enter your information and click \"Claim Block\"\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"emailaddress\"\n            label=\"Email Address\"\n            type=\"text\"\n            value={getEmail}\n            onChange={handleTextUpdate}\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={claimBlock}>Claim Block</Button>\n        </DialogActions>\n      </Dialog>\n\n    </div>\n  )\n}\n\nexport default Blockcard","/Users/James/Desktop/blockpool/src/utils/blockdata100.js",[],[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14},{"ruleId":"83","replacedBy":"93"},{"ruleId":"85","replacedBy":"94"},{"ruleId":"89","severity":1,"message":"95","line":13,"column":25,"nodeType":"91","messageId":"92","endLine":13,"endColumn":41},{"ruleId":"89","severity":1,"message":"96","line":22,"column":10,"nodeType":"91","messageId":"92","endLine":22,"endColumn":23},{"ruleId":"89","severity":1,"message":"95","line":22,"column":25,"nodeType":"91","messageId":"92","endLine":22,"endColumn":41},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar",["97"],["98"],"'setBlockPoolData' is assigned a value but never used.","'blockPoolData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]